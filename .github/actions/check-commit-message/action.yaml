# .github/actions/check-commit-message/action.yaml
name: 'Check Commit Message'
description: 'Check commit message and set environment variables'
inputs:
  commit_message:
    description: 'The commit message'
    required: true
runs:
  using: 'composite'
  steps:
    - run: |
        echo 'Commit message: '
        echo '${{ inputs.commit_message }}'
        if echo '${{ inputs.commit_message }}' | grep -q '\[skip-build\]'
        then
          echo "SKIP_BUILD=true" >> $GITHUB_ENV
        else
          echo "SKIP_BUILD=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[publish package:all\]'
        then
          echo "PUBLISH_ALL_PACKAGES=true" >> $GITHUB_ENV
        else
          echo "PUBLISH_ALL_PACKAGES=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[publish package:javascript-sdk\]'
        then
          echo "PUBLISH_JAVASCRIPT_SDK=true" >> $GITHUB_ENV
        else
          echo "PUBLISH_JAVASCRIPT_SDK=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[publish package:node-sdk\]'
        then
          echo "PUBLISH_NODE_SDK=true" >> $GITHUB_ENV
        else
          echo "PUBLISH_NODE_SDK=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[publish package:react-sdk\]'
        then
          echo "PUBLISH_REACT_SDK=true" >> $GITHUB_ENV
        else
          echo "PUBLISH_REACT_SDK=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:all\]'
        then
          echo "DEPLOY_ALL_FUNCTIONS=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_ALL_FUNCTIONS=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:cloud-tasks\]'
        then
          echo "DEPLOY_CLOUD_TASKS=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_CLOUD_TASKS=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:cronjobs\]'
        then
          echo "DEPLOY_CRONJOBS=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_CRONJOBS=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:pubsub\]'
        then
          echo "DEPLOY_PUBSUB=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_PUBSUB=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:rest-api\]'
        then
          echo "DEPLOY_REST_API=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_REST_API=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:triggers\]'
        then
          echo "DEPLOY_TRIGGERS=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_TRIGGERS=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy function:webhooks\]'
        then
          echo "DEPLOY_WEBHOOKS=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_WEBHOOKS=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:all\]'
        then
          echo "DEPLOY_ALL_SITES=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_ALL_SITES=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:home-site\]'
        then
          echo "DEPLOY_HOME_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_HOME_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:admin-site\]'
        then
          echo "DEPLOY_ADMIN_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_ADMIN_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:blog-site\]'
        then
          echo "DEPLOY_BLOG_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_BLOG_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:knowledge-base-site\]'
        then
          echo "DEPLOY_KNOWLEDGE_BASE_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_KNOWLEDGE_BASE_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:referrals-site\]'
        then
          echo "DEPLOY_REFERRALS_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_REFERRALS_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:sso-site\]'
        then
          echo "DEPLOY_SSO_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_SSO_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:status-site\]'
        then
          echo "DEPLOY_STATUS_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_STATUS_SITE=false" >> $GITHUB_ENV
        fi
        if echo '${{ inputs.commit_message }}' | grep -q '\[deploy site:support-site\]'
        then
          echo "DEPLOY_SUPPORT_SITE=true" >> $GITHUB_ENV
        else
          echo "DEPLOY_SUPPORT_SITE=false" >> $GITHUB_ENV
        fi
      shell: bash
