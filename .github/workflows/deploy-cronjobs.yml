name: Deploy Cronjobs

'on':
  workflow_run:
    workflows: ['Publish Node SDK']
    branches: ['master', 'staging']
    types:
      - completed

jobs:
  deploy-cronjobs:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'master' && 'live' || 'test' }}

    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SECRET_CRED_DEPLOYMENT_ENVIRONMENT: ${{ secrets.SECRET_CRED_DEPLOYMENT_ENVIRONMENT }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_AUTH_URI: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_AUTH_URI }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_EMAIL: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_EMAIL }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_ID: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_ID }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PRIVATE_KEY }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PRIVATE_KEY_ID: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PRIVATE_KEY_ID }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PROJECT_ID: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PROJECT_ID }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_TOKEN_URI: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_TOKEN_URI }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_TYPE: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_TYPE }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_UNIVERSE_DOMAIN: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_UNIVERSE_DOMAIN }}
      SECRET_CRED_FIREBASE_ADMIN_STORAGE_BUCKET_NAME: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_STORAGE_BUCKET_NAME }}
      SECRET_CRED_SMOKE_TEST_RECIPIENT_EMAIL: ${{ secrets.SECRET_CRED_SMOKE_TEST_RECIPIENT_EMAIL }}
      SECRET_CRED_ALPACA_BROKER_API_BASE_URL: ${{ secrets.SECRET_CRED_ALPACA_BROKER_API_BASE_URL }}
      SECRET_CRED_ALPACA_BROKER_API_KEY: ${{ secrets.SECRET_CRED_ALPACA_BROKER_API_KEY }}
      SECRET_CRED_ALPACA_BROKER_API_SECRET: ${{ secrets.SECRET_CRED_ALPACA_BROKER_API_SECRET }}
      SECRET_CRED_ALPHA_VANTAGE_API_KEY: ${{ secrets.SECRET_CRED_ALPHA_VANTAGE_API_KEY }}
      SECRET_CRED_OPENAI_API_KEY: ${{ secrets.SECRET_CRED_OPENAI_API_KEY }}
      SECRET_CRED_STRIPE_API_KEY: ${{ secrets.SECRET_CRED_STRIPE_API_KEY }}
      SECRET_CRED_STRIPE_PRO_LICENSE_PRODUCT_ID: ${{ secrets.SECRET_CRED_STRIPE_PRO_LICENSE_PRODUCT_ID }}
      SECRET_CRED_STRIPE_PRO_LICENSE_PRODUCT_MONTHLY_PRICE_ID: ${{ secrets.SECRET_CRED_STRIPE_PRO_LICENSE_PRODUCT_MONTHLY_PRICE_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get the commit message which triggered this run
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%B" | tr '\n' '::::')
          echo "Commit message: $COMMIT_MESSAGE"
          echo "GIT_COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - id: check_commit
        uses: ./.github/actions/check-commit-message
        with:
          commit_message: ${{ env.GIT_COMMIT_MESSAGE }}

      - name: Build Docker image
        if: env.SKIP_BUILD == 'false' && (env.DEPLOY_ALL_FUNCTIONS == 'true' || env.DEPLOY_CRONJOBS == 'true')
        run: docker build -t monorepo-image .

      - name: Deploy function:cronjobs
        if: env.SKIP_BUILD == 'false' && (env.DEPLOY_ALL_FUNCTIONS == 'true' || env.DEPLOY_CRONJOBS == 'true')
        run: |
          chmod +x ./scripts/deploy-firebase-cloud-function.sh && ./scripts/deploy-firebase-cloud-function.sh cronjobs
