name: Deploy Referrals Site

'on':
  push:
    branches:
      - master
      - staging

jobs:
  deploy-referrals-site:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'master' && 'live' || 'test' }}

    env:
      FIREBASE_SITE_ID: ${{ vars.REFERRALS_SITE_FIREBASE_HOSTING_ID }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      HTTPS_NEXT_PUBLIC_VARIABLES: ${{ vars.REFERRALS_SITE_HTTPS_NEXT_PUBLIC_VARIABLES }}
      SECRET_CRED_DEPLOYMENT_ENVIRONMENT: ${{ secrets.SECRET_CRED_DEPLOYMENT_ENVIRONMENT }}
      SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PROJECT_ID: ${{ secrets.SECRET_CRED_FIREBASE_ADMIN_SERVICE_ACCOUNT_PROJECT_ID }}
      SHARED_HTTPS_NEXT_PUBLIC_VARIABLES: ${{ vars.SHARED_HTTPS_NEXT_PUBLIC_VARIABLES }}

    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get the commit message which triggered this run
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%B" | tr '\n' '::::')
          echo "Commit message: $COMMIT_MESSAGE"
          echo "GIT_COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - id: check_commit
        uses: ./.github/actions/check-commit-message
        with:
          commit_message: ${{ env.GIT_COMMIT_MESSAGE }}

      - name: Build Docker image
        if: env.SKIP_BUILD == 'false' && (env.DEPLOY_ALL_SITES == 'true' || env.DEPLOY_REFERRALS_SITE == 'true')
        run: docker build -t monorepo-image .

      - name: Deploy site:referrals-site
        if: env.SKIP_BUILD == 'false' && (env.DEPLOY_ALL_SITES == 'true' || env.DEPLOY_REFERRALS_SITE == 'true')
        run: |
          chmod +x ./scripts/deploy-firebase-hosting-site.sh;
          ./scripts/deploy-firebase-hosting-site.sh referrals-site
